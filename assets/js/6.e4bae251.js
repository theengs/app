(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{424:function(e,t,a){e.exports=a.p+"assets/img/logo-Theengs.0e5e58d4.png"},433:function(e,t,a){"use strict";a.r(t);var o=a(65),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[o("img",{attrs:{src:a(424),alt:"Iot"}})]),e._v(" "),o("p",[o("strong",[e._v("Theengs app")]),e._v(" is a multi platforms, multi devices application and BLE to MQTT gateway that leverage the "),o("a",{attrs:{href:"https://github.com/theengs/decoder",target:"_blank",rel:"noopener noreferrer"}},[e._v("Theengs Decoder library"),o("OutboundLink")],1),e._v(".\nIt retrieves data from a wide range of "),o("a",{attrs:{href:"prerequisites/devices"}},[e._v("BLE sensors")]),e._v("; LYWSD03MMC, CGD1, CGP1W, H5072, H5075, H5102, TH1, TH2, BBQ, CGH1, CGDK2, CGPR1, RuuviTag, WS02, WS08, TPMS, MiScale, LYWSD02, LYWSDCGQ, MiFlora... and enables to read the advertised data from these sensors. It also translates these informations into a readable JSON format and push those to an MQTT broker if you need.")]),e._v(" "),o("p",[e._v("The app uses the bluetooth component of your Android Phone, Windows desktop, Apple desktop, Linux desktop, laptop or server.")]),e._v(" "),o("p",[o("strong",[e._v("Theengs app")]),e._v(" can be used as a standalone solution or as a complementary solution to "),o("a",{attrs:{href:"https://docs.openmqttgateway.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenMQTTGateway"),o("OutboundLink")],1),e._v(" and/or "),o("a",{attrs:{href:"https://gateway.theengs.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Theengs gateway"),o("OutboundLink")],1),e._v(" if you want a continuously running gateway.")]),e._v(" "),o("p",[e._v("The app will retrieve data from BLE sensors from Govee, Xiaomi, Inkbird, QingPing, ThermoBeacon, ClearGrass, Blue Maestro and many more.")])])}),[],!1,null,null,null);t.default=r.exports}}]);